/**
 * Here is a sequence:
    '1', first number is 1
    '11', since previous number has One(1) 1
    '21', since previous number has Two(2) 1s
    '1211', since previous number has One(1) 2 and One(1) 1
    '111221', since previous number has One(1) 1, One(1) 2, Two(2) 1s
    '312211', since previous number has Three(3) 1s, Two(2) 2s, One(1) 1
    ....
    As explained above, the sequence is generated by counting the digits of previous number.

 *  Please create getNthNum(n) to return the n-th number string in the sequence, n starts from 1.
 *    
 * @param {number} n - integer
 * @returns {string}
 */
function getNthNum(n) {
  // your code here
  let result = "";
  let nth = 0;
  while (n !== nth++) {
    if (nth === 1) result = "1";
    if (nth === 2) result = "11";
    if (nth > 2) {
      result = getNthOccurences(result);
    }
  }
  console.log(result);
}

function getNthOccurences(str) {
  let newStr = "";
  let count = 1;
  for (let i = 0; i < str.length; i++) {
    if (i + 1 < str.length && str[i] === str[i + 1]) {
      count++;
    } else {
      newStr += `${count}${str[i]}`;
      count = 1;
    }
  }
  return newStr;
}

getNthNum(3);
getNthNum(10);
